#! /bin/bash
#	Copyright (C) 2016
#    	Alexandru Catalin Petrini <alexandru.c.petrini@gmail.com>
#  This script is intended to usefully manage gnome-shell extensions in compatible Gnome Shell versions.
get_enabled_extensions() {
	enabled_extensions=( $(gsettings get org.gnome.shell enabled-extensions | tr -d "[",",","]","\'") )
	echo "${enabled_extensions[@]}"	
}

print_enabled_extensions(){
	enabled_extensions=( $(gsettings get org.gnome.shell enabled-extensions | tr -d "[",",","]","\'") )
	for enabled_extension in "${enabled_extensions[@]}"
	do
#		echo $enabled_extension
		printf "| %-65s %-20s %-10s | \n" $enabled_extension "---------------->" enabled
	done
}

simple_print_enabled_extensions(){
	enabled_extensions=( $(gsettings get org.gnome.shell enabled-extensions | tr -d "[",",","]","\'") )
	for enabled_extension in "${enabled_extensions[@]}"
	do
		echo $enabled_extension
	done
}

get_installed_extensions() {
	global_installed_extensions=( $(find /usr/share/gnome-shell/extensions/ -maxdepth 1 -type d -name "*@*" -exec /usr/bin/basename {} \;) )
	local_installed_extensions=( $(find /home/$USER/.local/share/gnome-shell/extensions/ -maxdepth 1 -type d -name "*@*" -exec /usr/bin/basename {} \;) )
	if [ ${#local_installed_extensions[@]} -gt ${#global_installed_extensions[@]} ]
	then 
		installed_extensions=( ${local_installed_extensions[@]} )
		test_extensions=( ${global_installed_extensions[@]} )
	else
		installed_extensions=( ${global_installed_extensions[@]} )
		test_extensions=( ${local_installed_extensions[@]} )
	fi
	for test_extension in ${test_extensions[@]} 
	do 
		test_extension_not_doubled=true
		for installed_extension in ${installed_extensions[@]}
		do 
		if [ "$test_extension" = "$installed_extension" ]
			then
				test_extension_not_doubled=false
				break
			fi
		done
		if  [ $test_extension_not_doubled = true ]
		then
			test_extension=( $test_extension )
			installed_extensions=( "${installed_extensions[@]}" "${test_extension[@]}" )
			#echo ${test_extension[@]}
		fi
	done
	echo "${installed_extensions[@]}"
}

print_installed_extensions() {
	installed_extensions=( $(get_installed_extensions) )
	for installed_extension in "${installed_extensions[@]}"
	do 
	    [ "$(check_extension_is_enabled $installed_extension)" = true ] && status="enabled" || status="disabled";
		printf "| %-65s %-20s %-10s | \n" $installed_extension "---------------->" "$status"
	done
}
simple_print_installed_extensions() {
	installed_extensions=( $(get_installed_extensions) )
	for installed_extension in "${installed_extensions[@]}"
	do 
		echo $installed_extension
	done
}
check_extension_is_enabled() {
	extension_to_check=$1
	enabled_extensions=( $(gsettings get org.gnome.shell enabled-extensions | tr -d "[",",","]","\'") )
	for enabled_extension in "${enabled_extensions[@]}"
	do
		if [ "$enabled_extension" = "$extension_to_check" ]
		then 
			echo true
			return
		fi
	done
	echo false
}

check_extension_in_all_extensions() {
	extension_to_check=$1
	installed_extensions=( $(get_installed_extensions) )
	for installed_extension in "${installed_extensions[@]}"
	do
		if [ "$installed_extension" = "$extension_to_check" ]
		then 
			echo true
			return
		fi
	done
	echo false
}

disable_extension() {
	extension_to_disable=$1
	if  [ "$(check_extension_in_all_extensions $extension_to_disable)" = false ] 
	then 
		echo "Extension \"$extension_to_disable\" not installed."
		return
	fi
	if  [ "$(check_extension_is_enabled $extension_to_disable)" = false ] 
	then 
		echo "Extension \"$extension_to_disable\" is already disabled."
		return
	fi
	enabled_extensions=( $(gsettings get org.gnome.shell enabled-extensions | tr -d "[",",","]","\'") ) 
	enabled_extensions_string=""
	for enabled_extension in "${enabled_extensions[@]}"
	do
		if [ "$enabled_extension" != "$extension_to_disable" ] 
		then 
		enabled_extensions_string="$enabled_extensions_string '$enabled_extension', "
		fi
	done
	enabled_extensions_string=${enabled_extensions_string:1:-2}
	enabled_extensions_string="[ $enabled_extensions_string ]"

	gsettings set org.gnome.shell enabled-extensions "$enabled_extensions_string"
}

enable_extension() {
	extension_to_enable=$1
	if  [ "$(check_extension_in_all_extensions $extension_to_enable)" = false ] 
	then 
		echo "Extension \"$extension_to_enable\" not installed."
		return
	fi
	if  [ "$(check_extension_is_enabled $extension_to_enable)" = true ] 
	then 
		echo "Extension \"$extension_to_enable\" is already enabled."
		return
	fi
	enabled_extensions_string=$(gsettings get org.gnome.shell enabled-extensions | tr -d "]")
	enabled_extensions_string="$enabled_extensions_string, '$extension_to_enable' ]"
	gsettings set org.gnome.shell enabled-extensions "$enabled_extensions_string"
}

print_help() {
	printf " \n %-5s\n\n" "Help: "
	printf " %5s %-60s \n" "" "gnome-shell-extensions <option>"
	printf " %5s %-60s \n" "" "gnome-shell-extensions <option> <extensions-name>"
	printf " %5s %-60s \n\n" "" "gnome-shell-extensions <option> <char-group>"
	printf " %42s\n %40s %-100s\n\n" "-h, --help" "" "Show help."
	printf " %42s\n %40s %-100s\n\n" "-e, --enable-extension" "" "Enable extension (full name)."
	printf " %42s\n %40s %-100s\n\n" "-d, --disable-extension" "" "Disable extension (full name)."
	printf " %42s\n %40s %-100s\n\n" "-le, --list-enabled" "" "List enabled extensions with state info."
	printf " %42s\n %40s %-100s\n\n" "-sle, --simple-list-enabled" "" "Simple list of enabled extensions."
	printf " %42s\n %40s %-100s\n\n" "-l, --list-all" "" "List all extensions with state info."
	printf " %42s\n %40s %-100s\n\n" "-st, --status" "" "Show info about extensions state."
	printf " %42s\n %40s %-100s\n\n" "-lc, --list-all-containing" "" "List all extensions that contain the group of charachters with state info."
	printf " %42s\n %40s %-100s\n\n" "-slc, --simple-list-all-containing" "" "Simple list of the extensions that contain character group."
	printf " %42s\n %40s %-100s\n\n" "-lec, --list-enabled-containing" "" "List enabled extensions that contain characher group with state info."
	printf " %42s\n %40s %-100s\n\n" "-slec, --simple-list-enabled-containing" "" "Simple list of enabled extensions that contain character group."
	printf " %42s\n %40s %-100s\n\n" "-rt, --return-status" "" "Return extension state: true (enabled), false (disabled)."
}

case $1 in
	-h|--help)
		print_help
		;;
	-e|--enable-extension) 
		enable_extension $2
		;;
	-d|--disable-extension) 
		disable_extension $2
		;;
	-le|--list-enabled) 
		print_enabled_extensions
		;;
	-sle|--simple-list-enabled)
		simple_print_enabled_extensions
		;; 
	-l|--list-all) 
		print_installed_extensions
		;;
	-st|--status)
		if  [ "$(check_extension_is_enabled $2)" = true ] 
		then 
			echo "Extension \"$2\" is  enabled."
		else
			echo "Extension \"$2\" is  disabled."
		fi
		;;
	-lc|--list-all-containing)
		print_installed_extensions| grep -i $2
		;;
	-slc|--simple-list-all-containing)
		simple_print_enabled_extensions | grep -i $2
		;;
	-lec|--list-enabled-containing)
		print_enabled_extensions | grep -i $2
		;;
	-slec|--simple-list-enabled-containing)
		simple_print_enabled_extensions | grep -i $2
		;;	
	-rt|--return-status)
		check_extension_is_enabled $2
		;;	
	*)
		print_help
		;;
esac	


